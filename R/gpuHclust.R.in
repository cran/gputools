gpuDist <- function(points, method = "euclidean", p = 2.0)
{
	if(!@HAS_CUDA@) {
		warning("unable to find CUDA installation\n\t1.  uninstall package gputools\n\t2.  check that you have installed a CUDA capable driver\n\t3.  check that you have installed the CUDA toolkit correctly\n\t4.  check that the environment variable CUDA_HOME is set to the install location of the CUDA toolkit\n")
		return()
	}
	numPoints <- nrow(points)
	a <- .C("Rdistances", PACKAGE = "gputools",
		as.single(t(points)),
		as.integer(numPoints),
		as.integer(ncol(points)),
		d = single(numPoints * numPoints),
		method, as.single(p))
	matrix(a$d, numPoints, numPoints)
}

gpuHclust <- function(distances, method = "single")
{
	if(!@HAS_CUDA@) {
		warning("unable to find CUDA installation\n\t1.  uninstall package gputools\n\t2.  check that you have installed a CUDA capable driver\n\t3.  check that you have installed the CUDA toolkit correctly\n\t4.  check that the environment variable CUDA_HOME is set to the install location of the CUDA toolkit\n")
		return()
	}
	numpoints <- nrow(distances)
    a <- .C("Rhcluster", PACKAGE = "gputools",
		as.single(distances),
		as.integer(numpoints),
		merge = integer(2*(numpoints-1)),
		order = integer(numpoints),
		val = single(numpoints-1),
		method)
		merge <- matrix(a$merge, numpoints-1, 2)
        return(list(merge = merge, order = a$order, height = a$val))
}

gpuDistClust <- function(points, distmethod = "euclidean", 
	clustmethod = "single") 
{
	if(!@HAS_CUDA@) {
		warning("unable to find CUDA installation\n\t1.  uninstall package gputools\n\t2.  check that you have installed a CUDA capable driver\n\t3.  check that you have installed the CUDA toolkit correctly\n\t4.  check that the environment variable CUDA_HOME is set to the install location of the CUDA toolkit\n")
		return()
	}
	nump <- nrow(points)
	a <- .C("Rdistclust", PACKAGE = "gputools",
		distmethod, clustmethod,
		as.single(t(points)),
		as.integer(nump),
		as.integer(ncol(points)),
		merge = integer(2*(nump-1)),
		order = integer(nump),
		val = single(nump-1))
	merge <- matrix(a$merge, nump-1, 2)
	return(list(merge = merge, order = a$order, height = a$val))
}
