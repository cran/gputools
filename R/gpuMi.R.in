gpuMi <- function(x, y = NULL, bins = 2, splineOrder = 1)
{
	if(!@HAS_CUDA@) {
		warning("unable to find CUDA installation\n\t1.  uninstall package gputools\n\t2.  check that you have installed a CUDA capable driver\n\t3.  check that you have installed the CUDA toolkit correctly\n\t4.  check that the environment variable CUDA_HOME is set to the install location of the CUDA toolkit\n")
		return()
	}

	bins <- as.integer(bins)
	splineOrder <- as.integer(splineOrder)

	cols <- nrow(x)

	a <- as.single(x)
	rowsA <- ncol(x)

	if(is.null(y)) {
		b <- a
		rowsB <- ncol(x)
	} else {
		b <- as.single(y)
		rowsB <- ncol(y)
	}

	mutualInfo <- single(rowsB * rowsA)

	if(is.null(y)) {
		cCall <- .C("rBSplineMutualInfoSingle",
			cols, bins, splineOrder, rowsA, a,
			mi = mutualInfo)
		mutualInfo <- cCall$mi
	} else {
		cCall <- .C("rBSplineMutualInfo", cols,
			bins, splineOrder, rowsA, a, rowsB, b,
			mi = mutualInfo)
		mutualInfo <- cCall$mi
	}

	mutualInfo <- matrix(mutualInfo, rowsB, rowsA)
	if(is.null(y)) {
		rownames(mutualInfo) <- colnames(x)
	} else {
		rownames(mutualInfo) <- colnames(y)
	}
	colnames(mutualInfo) <- colnames(x)
	return(mutualInfo)
}
